{"version":3,"sources":["components/Button.tsx","components/Header.tsx","components/Task.tsx","components/Tasks.tsx","components/AddTask.tsx","App.tsx","index.tsx"],"names":["Button","_ref","color","text","onClick","react_default","a","createElement","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","components_Button","Task","task","onDelete","onToggle","console","log","concat","reminder","onDoubleClick","id","index_esm","cursor","date","toUTCString","Tasks","tasks","Fragment","map","components_Task","key","AddTask","_useState","useState","_useState2","Object","slicedToArray","setText","_useState3","_useState4","setReminder","_React$useState","React","Date","_React$useState2","setDate","onSubmit","e","preventDefault","newDate","alert","type","placeholder","value","onChange","target","LocalizationProvider","dateAdapter","AdapterDateFns","Stack","spacing","DateTimePicker","label","newValue","renderInput","params","TextField","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","components_Header","components_AddTask","Math","floor","random","newTask","objectSpread","toConsumableArray","length","components_Tasks","filter","rootElement","document","getElementById","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.ede16135.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types'\n\n  \n\ntype buttonType = {\n    text: String;\n    color: any;\n    onClick: (value: any) => void;\n    //onClick: any;\n}\n\nconst Button = ({color, text, onClick}: buttonType) => {\n    return (\n  <button onClick = {onClick}style = {{backgroundColor: color}}\n  className = 'btn'> {text} </button>\n  )\n}\n\nButton.defaultProps = {\n    color: 'aqua',\n}\n\nButton.propTypes = {\n    text: PropTypes.string,\n    color: PropTypes.string,\n    onClick: PropTypes.func,\n}\n\nexport default Button\n","import React from 'react';\nimport PropTypes from 'prop-types'\nimport Button from './Button'\n\nimport { headerProps } from '../types/Typedef';\n\nconst Header = ({title, onAdd, showAdd}: headerProps) => {\n  \n    return (\n    <header className = 'header'> \n        <h1>{title}</h1>\n      <Button \n        color = {showAdd ? 'darkred' : 'green' } \n        text = {showAdd ? 'Close' : 'Add Task'}\n        onClick = {onAdd}/>\n      \n    </header>\n  )\n}\n\nHeader.defaultProps = {\n    title: \"Task Tracker\",\n}\n\nHeader.propTypes = {\n    title: PropTypes.string.isRequired,\n}\n//CSS in JS\n//const headingStyle = {\n  //  color: 'red', \n    //backgroundColor:'black'\n//}\n\nexport default Header\n","import React from 'react';\nimport { FaTimes} from 'react-icons/fa'\n\ntype taskType = {\n  task: any,\n  onDelete: (value: string) => {},\n  onToggle: (value: string) => {},\n}\n\nconst Task = ({task, onDelete, onToggle}: taskType) => {\n  console.log(task);\n  return (\n    <div className = {`task ${task.reminder ? \n        'reminder' : ''}`} onDoubleClick ={() =>\n    onToggle(task.id)}>\n        <h3>{task.text} <FaTimes style = {{color: \n        'red', cursor: 'pointer'}} \n        onClick = {() => onDelete(task.id)}\n        />\n        </h3>\n        <p>{task.date.toUTCString()}</p>\n    </div>\n  )\n}\n\nexport default Task\n","import React from 'react';\nimport Task from './Task'\n\ntype taskType = {\n  tasks: any,\n  onDelete: any;\n  onToggle: any;\n}\n\nconst Tasks = ({tasks, onDelete, onToggle}:taskType) => {\n  return (\n    <>\n    {tasks.map((task:any) => (\n    <Task key = {task.id} task = {task} onDelete = {onDelete} onToggle = {onToggle}/>\n    ))}\n    </>\n  )\n}\n\nexport default Tasks\n","import React from 'react';\nimport { useState } from 'react'\nimport Stack from '@mui/material/Stack';\nimport TextField from '@mui/material/TextField';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { DateTimePicker } from '@mui/x-date-pickers';\n\ntype onAddTask = {\n  text: string;\n  reminder: Boolean;\n  date: Date;\n}\n\ntype addTaskType = {\n  onAdd: (value: onAddTask) => void;\n}\n\n// TODO: this is an any type . this needs to change\n// Compilation fails for this\nconst AddTask = ({onAdd}:addTaskType) => {\n    const [text, setText] = useState('')\n    const [reminder, setReminder] = useState(false)\n    const [date, setDate] = React.useState(new Date());\n\n  const handleChange = (newValue:any) => {\n    setDate(newValue);\n  };\n\n    const onSubmit = (e:any) => {\n        e.preventDefault()\n\n        if (!text) {\n          alert('Please add a task')\n          return\n        }\n        \n    \n        onAdd({ text, reminder, date})\n\n        setText('')\n        setReminder(false)\n        const newDate = new Date()\n        setDate(newDate)\n    }\n\n  return (\n    <form className = 'add-form' onSubmit = {onSubmit}>\n        <div className = 'form-control'>\n            <label> Task</label>\n            <input \n              type='text' \n              placeholder = 'Add Task' \n              value = {text} \n              onChange = {(e) => setText(e.target.value)} />\n        </div>\n        <div> \n        <LocalizationProvider dateAdapter={AdapterDateFns}>\n          <Stack spacing={3}>\n            <DateTimePicker\n              label=\"Date & Time picker\"\n              value={date}\n              onChange={handleChange}\n              renderInput={(params) => <TextField {...params} />}\n            />\n          </Stack>\n      </LocalizationProvider>\n        </div>\n        <div className = \n        'form-control form-control-check'>\n            <label> Alarm/Reminder </label>\n            <input \n              type='checkbox' \n              checked = {reminder} \n              onChange = {(e) => setReminder(e.currentTarget.checked)} />\n        </div>\n\n        <input type = 'submit' value = 'Add Task' className = 'btn btn-block' />\n    </form>\n\n  )\n}\n\nexport default AddTask\n","import React from 'react';\nimport { useState} from 'react'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState (false)\n  const [tasks, setTasks] = useState<any>([])\n\n    //add task\n\n    const addTask = (task: any) => {\n     const id = Math.floor(Math.random() * 10000) + 1\n    const newTask = {id, ...task }\n    setTasks ([...tasks, newTask])\n    }\n\n\n    //delete Task\n    const deleteTask = (id: number) => {\n      setTasks(tasks.filter((task: any) => task.id !==\n      id))\n    }\n\n//toggle Reminder\n\nconst toggleReminder = (id: number) => {\n  setTasks(tasks.map((task: any) => task.id === id ? \n  { ...task, reminder: !task.reminder } : task))\n}\n\n  return (\n    <div className=\"container\">\n      <Header onAdd = { () => setShowAddTask(!showAddTask)} showAdd= {showAddTask}/>\n      {showAddTask && <AddTask onAdd = {addTask}/>}\n      {tasks.length > 0? (<Tasks tasks = {tasks} \n      onDelete = {deleteTask} onToggle = \n      {toggleReminder}\n      />) : ('No Tasks Yet...')}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\n\nconst rootElement = document.getElementById('root')\nconst root = ReactDOM.createRoot(rootElement!);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals(null);\n"],"sourceRoot":""}